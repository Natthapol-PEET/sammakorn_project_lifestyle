### docker - postgresql
## Link => https://towardsdatascience.com/how-to-run-postgresql-using-docker-15bf87b452d4
docker-compose up

@@ Connect to psql
docker exec -it vehicle_management_postgres_db_1 bash
psql --host=vehicle_management_postgres_db_1 --dbname=vehicle_management --username=lifestyle
psql -h vehicle_management_postgres_db_1 -d vehicle_management -U lifestyle

@@ Load data from a file
psql -h pg_container -d test_db -U root -f infile


docker run --name postgres -d \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_DATABASE=vehicle_management \
    -e PGDATA=/var/lib/postgresql/data/pgdata \
    -v /tmp:/var/lib/postgresql/data \
    -p 5432:5432 \
    postgres:9.6

docker run --name postgres12 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -p 5432:5432 -d postgres:12-alpine

----------------------------------------------------------------


# 1. Login to docker
$ sudo docker login

# 2. docker build -t <hub-user>/<repo-name>[:<tag>]
$ sudo docker build -t natthapol593/node-socketio-service:v0.1.0 .

# 3. docker tag <existing-image> <hub-user>/<repo-name>[:<tag>]
$ sudo docker tag -t natthapol593/node-socketio-service:v0.1.0

# 4. docker commit <existing-container> <hub-user>/<repo-name>[:<tag>]

# 5. Push image
# docker push <hub-user>/<repo-name>:<tag>
$ sudo docker push natthapol593/node-socketio-service:v0.1.0


# 6. Pull Image
$ docker pull natthapol593/node-socketio-service:v0.1.0

# 7. Deploy
docker run -it -d --rm --name node-socketio-service -p 9090:9090 natthapol593/node-socketio-service:v0.1.0
docker run -it -d --name node-socketio-service -p 9090:9090 natthapol593/node-socketio-service:v0.1.0

# test deploy
docker run -it --rm --name node-socketio-service -p 9090:9090 natthapol593/node-socketio-service:v0.1.0



# Create Docker Swarm as Cluster
- docker swarm init
- docker service create --replicas 3 --name cmswarm --publish 91:91 cmnode:1.0

Help:
docker images
docker rmi <image_id>
docker ps 
docker rm <container_id>
docker service ls
docker service rm <service_id>

